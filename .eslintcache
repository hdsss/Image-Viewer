[{"C:\\storage\\personal\\upgrad\\assignment\\image-viewer\\src\\index.js":"1","C:\\storage\\personal\\upgrad\\assignment\\image-viewer\\src\\screens\\login\\Login.js":"2","C:\\storage\\personal\\upgrad\\assignment\\image-viewer\\src\\common\\header\\Header.js":"3","C:\\storage\\personal\\upgrad\\assignment\\image-viewer\\src\\screens\\Controller.js":"4"},{"size":206,"mtime":1612203958911,"results":"5","hashOfConfig":"6"},{"size":4080,"mtime":1612203958933,"results":"7","hashOfConfig":"6"},{"size":366,"mtime":1612203958903,"results":"8","hashOfConfig":"6"},{"size":0,"mtime":1612203958920,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pjxlon",{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\storage\\personal\\upgrad\\assignment\\image-viewer\\src\\index.js",[],"C:\\storage\\personal\\upgrad\\assignment\\image-viewer\\src\\screens\\login\\Login.js",["20","21","22","23"],"import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Header from '../../common/header/Header';\r\nimport './Login.css';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst username = \"testuser\";\r\nconst password = \"testpassword\";\r\nconst authToken = \"\"\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            reqUsername: \"dispNone\",\r\n            reqPassword: \"dispNone\",\r\n            loginSuccess: false,\r\n            incorrectLogin: false,\r\n        }\r\n    }\r\n    inputUsernameChangeHandler = (e) => {\r\n        this.setState({ username: e.target.value });\r\n        this.state.incorrectLogin = false;\r\n    }\r\n\r\n    inputLoginPasswordChangeHandler = (e) => {\r\n        this.setState({ password: e.target.value });\r\n        this.state.incorrectLogin = false;\r\n    }\r\n\r\n    loginHandler = () => {\r\n        console.log(\"loginHandler\" + this.state.username);\r\n        this.state.username === \"\" ? this.setState({ reqUsername: \"dispBlock\" }) : this.setState({ reqUsername: \"dispNone\" });\r\n        this.state.password === \"\" ? this.setState({ reqPassword: \"dispBlock\" }) : this.setState({ reqPassword: \"dispNone\" });\r\n        if (this.state.username === \"\" || this.state.password === \"\") {\r\n            return;\r\n        }\r\n        if (username === this.state.username || password === this.state.password) {\r\n            this.state.loginSuccess = true;\r\n        }\r\n        else {\r\n            this.state.incorrectLogin = true;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Card className=\"card-container\">\r\n                    <CardContent>\r\n                        <Typography variant=\"h4\" component=\"h2\">\r\n                            LOGIN\r\n                            </Typography><br />\r\n                        <FormControl required className=\"formControl\">\r\n                            <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n                            <Input id=\"username\" type=\"text\" username={this.state.username} onChange={this.inputUsernameChangeHandler} />\r\n                            <FormHelperText className={this.state.reqUsername}>\r\n                                <span className=\"red\">Required</span>\r\n                            </FormHelperText>\r\n                        </FormControl>\r\n                        <br /><br />\r\n                        <FormControl required className=\"formControl\">\r\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                            <Input id=\"password\" type=\"text\" password={this.state.password} onChange={this.inputLoginPasswordChangeHandler} />\r\n                            <FormHelperText className={this.state.reqPassword}>\r\n                                <span className=\"red\">Required</span>\r\n                            </FormHelperText>\r\n                        </FormControl>\r\n                        <br /><br />\r\n                        {this.state.incorrectLogin === true &&\r\n                            <FormControl>\r\n                                <span className=\"red\">\r\n                                    Incorrect Username and/or Password\r\n                                      </span>\r\n                            </FormControl>\r\n                        }\r\n                        <br /><br />\r\n                        <Button variant=\"contained\" onClick={this.loginHandler} color=\"primary\">\r\n                            LOGIN\r\n                            </Button>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;",["24","25"],"C:\\storage\\personal\\upgrad\\assignment\\image-viewer\\src\\common\\header\\Header.js",[],"C:\\storage\\personal\\upgrad\\assignment\\image-viewer\\src\\screens\\Controller.js",[],{"ruleId":"26","severity":1,"message":"27","line":31,"column":9,"nodeType":"28","endLine":31,"endColumn":19},{"ruleId":"26","severity":1,"message":"27","line":36,"column":9,"nodeType":"28","endLine":36,"endColumn":19},{"ruleId":"26","severity":1,"message":"27","line":48,"column":13,"nodeType":"28","endLine":48,"endColumn":23},{"ruleId":"26","severity":1,"message":"27","line":51,"column":13,"nodeType":"28","endLine":51,"endColumn":23},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-global-assign","no-unsafe-negation"]